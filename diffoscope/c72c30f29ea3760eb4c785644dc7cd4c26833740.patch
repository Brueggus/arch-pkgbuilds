From c72c30f29ea3760eb4c785644dc7cd4c26833740 Mon Sep 17 00:00:00 2001
From: Chris Lamb <lamby@debian.org>
Date: Thu, 28 Jan 2021 12:22:17 +0000
Subject: [PATCH] Prefer to use magic.Magic over the magic.open compatibility
 interface. (Closes: reproducible-builds/diffoscope#236)

See <https://github.com/ahupp/python-magic/blob/master/COMPAT.md> for more info.
---
 diffoscope/comparators/utils/file.py | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/diffoscope/comparators/utils/file.py b/diffoscope/comparators/utils/file.py
index 32700f02..fb3b4316 100644
--- a/diffoscope/comparators/utils/file.py
+++ b/diffoscope/comparators/utils/file.py
@@ -65,37 +65,37 @@ def _run_tests(fold, tests):
 
 
 class File(metaclass=abc.ABCMeta):
-    if hasattr(magic, "open"):  # use Magic-file-extensions from file
+    if hasattr(magic, "Magic"):  # use python-magic
 
         @classmethod
         def guess_file_type(cls, path):
             if not hasattr(cls, "_mimedb"):
-                cls._mimedb = magic.open(magic.NONE)
-                cls._mimedb.load()
-            return cls._mimedb.file(
-                path.encode("utf-8", errors="surrogateescape")
-            )
+                cls._mimedb = magic.Magic()
+            return maybe_decode(cls._mimedb.from_file(path))
 
         @classmethod
         def guess_encoding(cls, path):
             if not hasattr(cls, "_mimedb_encoding"):
-                cls._mimedb_encoding = magic.open(magic.MAGIC_MIME_ENCODING)
-                cls._mimedb_encoding.load()
-            return cls._mimedb_encoding.file(path)
+                cls._mimedb_encoding = magic.Magic(mime_encoding=True)
+            return maybe_decode(cls._mimedb_encoding.from_file(path))
 
-    else:  # use python-magic
+    else:  # use Magic-file-extensions from file
 
         @classmethod
         def guess_file_type(cls, path):
             if not hasattr(cls, "_mimedb"):
-                cls._mimedb = magic.Magic()
-            return maybe_decode(cls._mimedb.from_file(path))
+                cls._mimedb = magic.open(magic.NONE)
+                cls._mimedb.load()
+            return cls._mimedb.file(
+                path.encode("utf-8", errors="surrogateescape")
+            )
 
         @classmethod
         def guess_encoding(cls, path):
             if not hasattr(cls, "_mimedb_encoding"):
-                cls._mimedb_encoding = magic.Magic(mime_encoding=True)
-            return maybe_decode(cls._mimedb_encoding.from_file(path))
+                cls._mimedb_encoding = magic.open(magic.MAGIC_MIME_ENCODING)
+                cls._mimedb_encoding.load()
+            return cls._mimedb_encoding.file(path)
 
     def __init__(self, container=None):
         self._comments = []
-- 
GitLab

