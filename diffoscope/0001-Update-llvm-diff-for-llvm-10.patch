From c645b977740b8c42a4b1ee8fe3f6856cac7cee1e Mon Sep 17 00:00:00 2001
From: Jelle van der Waa <jelle@archlinux.org>
Date: Mon, 27 Apr 2020 21:48:51 +0200
Subject: [PATCH] Update llvm diff for llvm 10.

Signed-off-by: Jelle van der Waa <jelle@archlinux.org>
---
 tests/comparators/test_rlib.py            |  3 ++
 tests/data/rlib_llvm_dis_expected_diff_10 | 36 +++++++++++++++++++++++
 2 files changed, 39 insertions(+)
 create mode 100644 tests/data/rlib_llvm_dis_expected_diff_10

diff --git a/tests/comparators/test_rlib.py b/tests/comparators/test_rlib.py
index e47a0f4b..180d6b66 100644
--- a/tests/comparators/test_rlib.py
+++ b/tests/comparators/test_rlib.py
@@ -74,6 +74,9 @@ def rlib_dis_expected_diff():
     if LooseVersion(str(actual_ver)) >= LooseVersion("7.0"):
         diff_file = 'rlib_llvm_dis_expected_diff_7'
 
+    if LooseVersion(str(actual_ver)) >= LooseVersion("10.0"):
+        diff_file = 'rlib_llvm_dis_expected_diff_10'
+
     return get_data(diff_file)
 
 
diff --git a/tests/data/rlib_llvm_dis_expected_diff_10 b/tests/data/rlib_llvm_dis_expected_diff_10
new file mode 100644
index 00000000..46316a2f
--- /dev/null
+++ b/tests/data/rlib_llvm_dis_expected_diff_10
@@ -0,0 +1,36 @@
+@@ -42,32 +42,32 @@
+ entry-block:
+   %out.i.i = alloca i8*, align 8
+   %4 = icmp ult i64 %3, 17
+   br i1 %4, label %then-block-195-.i, label %_ZN12alloc_system3imp8allocate17h8ba7625cc4a820e8E.exit.i
+ 
+ then-block-195-.i:                                ; preds = %entry-block
+   %5 = tail call i8* @realloc(i8* %0, i64 %2) #2
+-  br label %_ZN12alloc_system3imp10reallocate17h4a0811c9ec086854E.exit
++  br label %_ZN12alloc_system3imp10reallocate1l44a0811c9ec086854E.exit
+ 
+ _ZN12alloc_system3imp8allocate17h8ba7625cc4a820e8E.exit.i: ; preds = %entry-block
+   %6 = bitcast i8** %out.i.i to i8*
+   call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #2
+   store i8* null, i8** %out.i.i, align 8
+   %7 = call i32 @posix_memalign(i8** nonnull %out.i.i, i64 %3, i64 %2) #2
+   %8 = icmp eq i32 %7, 0
+   %9 = load i8*, i8** %out.i.i, align 8
+   %sret_slot.0.i.i = select i1 %8, i8* %9, i8* null
+   call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #2
+   %10 = icmp ule i64 %2, %1
+   %11 = select i1 %10, i64 %2, i64 %1
+   call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %sret_slot.0.i.i, i8* align 1 %0, i64 %11, i1 false)
+   call void @free(i8* %0) #2
+-  br label %_ZN12alloc_system3imp10reallocate17h4a0811c9ec086854E.exit
++  br label %_ZN12alloc_system3imp10reallocate1l44a0811c9ec086854E.exit
+ 
+-_ZN12alloc_system3imp10reallocate17h4a0811c9ec086854E.exit: ; preds = %_ZN12alloc_system3imp8allocate17h8ba7625cc4a820e8E.exit.i, %then-block-195-.i
++_ZN12alloc_system3imp10reallocate1l44a0811c9ec086854E.exit: ; preds = %_ZN12alloc_system3imp8allocate17h8ba7625cc4a820e8E.exit.i, %then-block-195-.i
+   %sret_slot.0.i = phi i8* [ %5, %then-block-195-.i ], [ %sret_slot.0.i.i, %_ZN12alloc_system3imp8allocate17h8ba7625cc4a820e8E.exit.i ]
+   ret i8* %sret_slot.0.i
+ }
+ 
+ ; Function Attrs: nounwind readnone uwtable
+ define i64 @__rust_reallocate_inplace(i8* nocapture readnone %0, i64 %1, i64 %2, i64 %3) unnamed_addr #1 {
+ entry-block:
-- 
2.26.2

